{
    "name": "inference_online_pipeline",
    "description": "inference pipeline configuration for qna",
    "variables": {
        "RESOURCE_PATH": "/vectordb/resources",
        "MODEL_HOME": "C:/MyProgramFiles/AI/models",
        "AI_HOME": "C:/MyProgramFiles/AI",
        "OPENAI_KEY": "",
        "OPENAI_SERVER_URL": "",
        "CUSTOM_EMB_MISTRAL_INFERENCE_URL": "",
        "CUSTOM_LLM_BLOOM_INFERENCE_URL": "",
        "CUSTOM_LLM_LLAMA_INFERENCE_URL": "",
        "CUSTOM_LLM_MIXTRAL_INFERENCE_URL": ""
    },
    "processor_list": [
        {
            "enabled": true,
            "processor_name": "retriever",
            "processor_namespace": "infy_dpp_ai.retriever.process.query_retriever_processor",
            "processor_class_name": "QueryRetriever",
            "processor_input_config_name_list": [
                "QueryRetriever"
            ]
        },
        {
            "enabled": true,
            "processor_name": "reader",
            "processor_namespace": "infy_dpp_ai.reader.process.reader_processor",
            "processor_class_name": "Reader",
            "processor_input_config_name_list": [
                "Reader"
            ]
        }
    ],
    "processor_input_config": {
        "QueryRetriever": {
            "embedding": {
                "openai": {
                    "enabled": false,
                    "configuration": {
                        "api_type": "azure",
                        "api_version": "2022-12-01",
                        "api_url": "${OPENAI_SERVER_URL}",
                        "api_key": "${OPENAI_KEY}",
                        "model_name": "text-embedding-ada-002",
                        "deployment_name": "text-embedding-ada-002",
                        "chunk_size": 1000,
                        "tiktoken_cache_dir": "${MODEL_HOME}/tiktoken_encoding"
                    }
                },
                "sentence_transformer": {
                    "enabled": true,
                    "configuration": {
                        "model_name": "all-MiniLM-L6-v2",
                        "model_home_path": "${MODEL_HOME}",
                        "tiktoken_cache_dir": "${MODEL_HOME}/tiktoken_encoding"
                    }
                },
                "custom": {
                    "enabled": false,
                    "configuration": {
                        "model_name": "mistral-embd",
                        "api_key": "",
                        "endpoint": "${CUSTOM_EMB_MISTRAL_INFERENCE_URL}"
                    }
                }
            },
            "storage": {
                "vectordb": {
                    "faiss": {
                        "enabled": false,
                        "configuration": {
                            "chunked_files_root_path": "/data/vectordb/chunked",
                            "encoded_files_root_path": "/data/vectordb/encoded",
                            "db_name": "documents",
                            "index_id": "",
                            "collections": [
                                {
                                    "collection_name": "",
                                    "collection_secret_key": "",
                                    "chunk_type": ""
                                }
                            ],
                            "distance_metric": {
                                "eucledian": true
                            }
                        }
                    },
                    "infy_db_service": {
                        "enabled": true,
                        "configuration": {
                            "db_service_url": "",
                            "model_name": "",
                            "index_id": "",
                            "collections": [
                                {
                                    "collection_name": "",
                                    "collection_secret_key": ""
                                }
                            ]
                        }
                    }
                },
                "sparseindex": {
                    "bm25s": {
                        "enabled": false,
                        "configuration": {
                            "sparse_index_root_path": "/data/db/sparseindex",
                            "db_name": "documents",
                            "index_id": "",
                            "collections": [
                                {
                                    "collection_name": "",
                                    "collection_secret_key": "",
                                    "chunk_type": ""
                                }
                            ],
                            "nltk_data_dir": "${AI_HOME}/nltk_data"
                        }
                    },
                    "infy_db_service": {
                        "enabled": true,
                        "configuration": {
                            "db_service_url": "",
                            "method_name": "",
                            "index_id": "",
                            "collections": [
                                {
                                    "collection_name": "",
                                    "collection_secret_key": ""
                                }
                            ]
                        }
                    }
                }
            },
            "hybrid_search": {
                "rrf": {
                    "enabled": true
                }
            },
            "queries": [
                {
                    "attribute_key": "generic_attribute_key",
                    "question": "",
                    "top_k": 2,
                    "pre_filter_fetch_k": 10,
                    "filter_metadata": {},
                    "min_distance": 0,
                    "max_distance": 2
                }
            ]
        },
        "Reader": {
            "storage": {
                "vectordb": {
                    "faiss": {
                        "enabled": false
                    },
                    "infy_db_service": {
                        "enabled": true
                    }
                },
                "sparseindex": {
                    "bm25s": {
                        "enabled": false
                    },
                    "infy_db_service": {
                        "enabled": true
                    }
                }
            },
            "hybrid_search": {
                "rrf": {
                    "enabled": true
                }
            },
            "llm": {
                "openai": {
                    "enabled": true,
                    "configuration": {
                        "api_type": "azure",
                        "api_version": "2024-02-15-preview",
                        "api_url": "${OPENAI_SERVER_URL}",
                        "api_key": "${OPENAI_KEY}",
                        "max_tokens": 1000,
                        "model_name": "gpt-4",
                        "deployment_name": "gpt4",
                        "temperature": 0.5,
                        "is_chat_model": true,
                        "tiktoken_cache_dir": "${MODEL_HOME}/tiktoken_encoding"
                    },
                    "cache": {
                        "enabled": false,
                        "cache_root_path": "/data/cache/infy_model_service"
                    }
                },
                "custom": {
                    "bloom-7b1": {
                        "enabled": false,
                        "configuration": {
                            "inference_url": "${CUSTOM_LLM_BLOOM_INFERENCE_URL}",
                            "tiktoken_cache_dir": "${MODEL_HOME}/tiktoken_encoding",
                            "remove_query_from_response": true,
                            "verify_ssl": false
                        },
                        "json_payload": {
                            "inputs": "{query}",
                            "parameters": {
                                "max_new_tokens": 4096,
                                "temperature": 1,
                                "num_return_sequences": 1,
                                "do_sample": true
                            }
                        }
                    },
                    "llama2-7b": {
                        "enabled": false,
                        "configuration": {
                            "inference_url": "${CUSTOM_LLM_LLAMA_INFERENCE_URL}",
                            "tiktoken_cache_dir": "${MODEL_HOME}/tiktoken_encoding",
                            "remove_query_from_response": true,
                            "verify_ssl": false
                        },
                        "json_payload": {
                            "inputs": "{query}",
                            "parameters": {
                                "max_new_tokens": 4096,
                                "temperature": 1,
                                "num_return_sequences": 1,
                                "do_sample": true
                            }
                        }
                    },
                    "mixtral8x7b-instruct": {
                        "enabled": false,
                        "configuration": {
                            "inference_url": "${CUSTOM_LLM_MIXTRAL_INFERENCE_URL}",
                            "tiktoken_cache_dir": "${MODEL_HOME}/tiktoken_encoding",
                            "remove_query_from_response": false,
                            "verify_ssl": false
                        },
                        "json_payload": {
                            "inputs": "{query}",
                            "parameters": {
                                "max_new_tokens": 1024
                            }
                        }
                    }
                }
            },
            "named_context_templates": {
                "context_default": "{chunk_text}",
                "context_1": "[chunk_id={chunk_id},page_no={page_no},sequence_no={sequence_no},bbox={bbox},doc_name={doc_name}]\n{chunk_text}\n",
                "context_2": "[chunk_id={chunk_id},page_no={page_no},sequence_no={sequence_no}]\n{chunk_text}\n"
            },
            "named_prompt_templates": {
                "prompt_template_1": {
                    "content": [
                        "Use the following pieces of context to answer the question at the end.",
                        "If you don't know the answer or even doubtful a bit, just say that you don't know,",
                        " don't try to make up an answer.Just give the shortest and most appropriate relavant answer to the question.",
                        "{context}",
                        "Question: {question}",
                        "Helpful Answer:"
                    ],
                    "context_template": "context_default"
                },
                "prompt_template_2": {
                    "content": [],
                    "file_path": "/data/config/prompt_templates/prompt_1.txt",
                    "context_template": "context_default"
                },
                "prompt_template_3": {
                    "content": [],
                    "file_path": "/data/config/prompt_templates/prompt_2.txt",
                    "context_template": "context_1"
                },
                "prompt_template_5": {
                    "content": [],
                    "file_path": "/data/config/prompt_templates/extractor_attribute_prompt.txt",
                    "context_template": "context_1"
                },
                "open_ai_prompt_template_1": {
                    "content": [],
                    "file_path": "/data/config/prompt_templates/extractor_attribute_prompt_2.txt",
                    "context_template": "context_2",
                    "response_validation": {
                        "enabled": true,
                        "type": "json",
                        "total_attempts": 3
                    }
                }
            },
            "inputs": [
                {
                    "attribute_key": "generic_attribute_key",
                    "prompt_template": "open_ai_prompt_template_1",
                    "model_type": "QnA",
                    "top_k": 1
                }
            ]
        }
    }
}